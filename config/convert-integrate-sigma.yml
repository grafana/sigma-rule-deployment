name: Convert and Integrate Sigma Rules

on:
  pull_request:
    branches:
      - main
    paths:
      - "rules*/**.yml"
      - "pipelines/**.yml"
      - "config.yml"

jobs:
  convert-and-integrate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: read
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Convert Sigma Rules
        uses: grafana/sigma-rule-deployment/actions/convert@bb1e922e36c3a802a4c2db5e7dbeeddf85ae1c32
        with:
          config_path: "./config.yml"
          github_token: ${{ secrets.CLONE_TOKEN }}
          pretty_print: true
          plugin_packages: pysigma-backend-loki

      - name: Output Converted Rules
        id: converted-rules-output
        if: ${{ github.event_name == 'pull_request' }}
        shell: bash
        run: |
          sudo apt-get install -y jq
          git fetch
          git add -A
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} --diff-filter=ACMR -- conversions)
          DELETED_FILES=$(git diff --name-only origin/${{ github.base_ref }} --diff-filter=D -- conversions)
          if [ -z "$CHANGED_FILES" ]; then
            echo "No new conversions" > ./converted-rules.md
            exit 0
          fi
          echo "## $(echo "${CHANGED_FILES}" | wc -l) conversion(s)" > ./converted-rules.md
          for file in ${CHANGED_FILES}; do
              echo "* [$file](${{ github.server_url }}/${{ github.repository }}/blob/${{ github.head_ref }}/$file)" >> ./converted-rules.md
          done
          echo changed_files=${CHANGED_FILES//\\n/ } >> "$GITHUB_OUTPUT"
          echo deleted_files=${DELETED_FILES//\\n/ } >> "$GITHUB_OUTPUT"

      - name: Comment Converted Rules
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        with:
          script: |
            let { readFileSync } = require('fs');
            let message = readFileSync('./converted-rules.md', 'utf8');
            github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
            })

      - name: Cleanup Temporary Files
        run: |
          rm ./converted-rules.md

      - name: Integrate Converted Rules
        uses: grafana/sigma-rule-deployment/actions/integrate@bb1e922e36c3a802a4c2db5e7dbeeddf85ae1c32
        with:
          config_path: "./config.yml"
          github_token: ${{ secrets.CLONE_TOKEN }}
          pretty_print: true
          changed_files: ${{ steps.converted-rules-output.outputs.changed_files }}
          deleted_files: ${{ steps.converted-rules-output.outputs.deleted_files }}

      - name: Output Integrated Rules
        if: ${{ github.event_name == 'pull_request' }}
        shell: bash
        run: |
          sudo apt-get install -y jq
          git fetch
          git add -A
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} --diff-filter=ACMR -- deployments)
          if [ -z "$CHANGED_FILES" ]; then
            echo "No new integrations" > ./integrated-rules.md
            exit 0
          fi
          echo "## $(echo "${CHANGED_FILES}" | wc -l) integration(s)" > ./integrated-rules.md
          for file in ${CHANGED_FILES}; do
              echo "* [$file](${{ github.server_url }}/${{ github.repository }}/blob/${{ github.head_ref }}/$file)" >> ./integrated-rules.md
          done

      - name: Comment Integrated Rules
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        with:
          script: |
            let { readFileSync } = require('fs');
            let message = readFileSync('./integrated-rules.md', 'utf8');
            github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
            })

      - name: Cleanup Temporary Files
        run: |
          rm ./integrated-rules.md

      - name: Commit integrated alert rules
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Sigma Rules Deployment"
