name: "Build Consolidated Image"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

# Prevent concurrent execution of these workflows to avoid multiple executions commiting to main simultaneously
# We **need** to commit to main to test the commenting feature
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

permissions: {}

jobs:
  build:
    name: "Build and Push Docker Image"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: "Build and Push (PR)"
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        if: github.event_name == 'pull_request'
        with:
          context: ./actions
          file: actions/Dockerfile
          tags: |
            ghcr.io/grafana/sigma-rule-deployment/sigma-rule-deployer:sha-${{ github.event.pull_request.head.sha }}
          push: true
      - name: "Build and Push (Push)"
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        if: github.event_name == 'push'
        with:
          context: ./actions
          file: actions/Dockerfile
          tags: |
            ghcr.io/grafana/sigma-rule-deployment/sigma-rule-deployer:sha-${{ github.sha }}
          push: true
      - name: "Build and Push (Release)"
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        if: github.event_name == 'release'
        with:
          context: ./actions
          file: actions/Dockerfile
          tags: |
            ghcr.io/grafana/sigma-rule-deployment/sigma-rule-deployer:${{ github.event.release.tag_name }}
            ghcr.io/grafana/sigma-rule-deployment/sigma-rule-deployer:latest
          push: true

  test-pr:
    if: github.event_name == 'pull_request'
    name: "Integration Testing"
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Setup Integration Tests
        uses: grafana/shared-workflows/actions/get-vault-secrets@a37de51f3d713a30a9e4b21bcdfbd38170020593 # get-vault-secrets/v1.3.0
        with:
          repo_secrets: |
            GITHUB_APP_ID=github-app:app-id
            GITHUB_CLIENT_ID=github-app:client-id
            GITHUB_CLIENT_SECRET=github-app:client-secret
            GITHUB_APP_PRIVATE_KEY=github-app:client-pem
      - name: Generate Token
        id: generate-token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2
        with:
          app-id: ${{ env.GITHUB_APP_ID }}
          private-key: ${{ env.GITHUB_APP_PRIVATE_KEY }}
          owner: grafana
          repositories: |
            sigma-rule-deployment
            sigma-rule-deployment-integration-test
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          token: ${{ steps.generate-token.outputs.token }}
          persist-credentials: false
          path: ./sigma-rule-deployment
      - name: Checkout Integration Test
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          token: ${{ steps.generate-token.outputs.token }}
          persist-credentials: true
          repository: grafana/sigma-rule-deployment-integration-test
          path: ./sigma-rule-deployment-integration-test
      - name: Create new branch
        id: integration-pr
        working-directory: ./sigma-rule-deployment-integration-test
        env:
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
          ACTION_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          git fetch

          STATUS=0
          git rev-parse --verify "integration-test-pr-${GITHUB_PR_NUMBER}" 2>/dev/null || STATUS=$?

          if [ $STATUS -eq 0 ]; then
            git checkout "integration-test-pr-${GITHUB_PR_NUMBER}"
            git pull
          else
            git checkout -b "integration-test-pr-${GITHUB_PR_NUMBER}"
          fi

          rm -r ./rules
          rm -r ./pipelines
          rm test.yml
          rm config.yml

          cp -R ../sigma-rule-deployment/integration-test/* ./
          sed -i "s/uses: grafana\/sigma-rule-deployment\/actions\/convert@.*/uses: grafana\/sigma-rule-deployment\/actions\/convert@$ACTION_SHA/g" ./.github/workflows/convert-integrate-test.yml
          sed -i "s/uses: grafana\/sigma-rule-deployment\/actions\/integrate@.*/uses: grafana\/sigma-rule-deployment\/actions\/integrate@$ACTION_SHA/g" ./.github/workflows/convert-integrate-test.yml

          # add the action sha so that the integration test can add the check to this PR
          echo "$ACTION_SHA" > action_sha.txt
          echo "$GITHUB_PR_NUMBER" > github_pr.txt

          git add -A

          git config user.email "sigma-rule-deployment-app@grafana.com"
          git config user.name "Sigma Rule Deployment App"

          git commit -m "update integration test configuration" --allow-empty

          git push origin "integration-test-pr-${GITHUB_PR_NUMBER}" --force

          RESULT=$(gh pr list --json id,title -H "integration-test-pr-${GITHUB_PR_NUMBER}" | jq -r '. | length')

          if [ "$RESULT" -eq 0 ]; then
            TEST_PR_URL=$(gh pr create --title "Integration Test PR ${GITHUB_PR_NUMBER}" --body "This PR to test Sigma Rule Deployment App from Sigma Rule Deployment Integration Test App for grafana/sigma-rule-deployment#${GITHUB_PR_NUMBER}" --head "integration-test-pr-${GITHUB_PR_NUMBER}" --base main)
            echo "TEST_PR_URL=${TEST_PR_URL}" >> "$GITHUB_OUTPUT"
          fi
      - name: Update integration main branch to latest and send test comment
        working-directory: ./sigma-rule-deployment-integration-test
        env:
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
          ACTION_SHA: ${{ github.event.pull_request.head.sha }}
          TEST_PR_URL: ${{ steps.integration-pr.outputs.TEST_PR_URL }}
        run: |
          git fetch

          git checkout main
          git pull

          sed -i "s/uses: grafana\/sigma-rule-deployment\/actions\/convert@.*/uses: grafana\/sigma-rule-deployment\/actions\/convert@$ACTION_SHA/g" ./.github/workflows/convert-integrate-comment-test.yml
          sed -i "s/uses: grafana\/sigma-rule-deployment\/actions\/integrate@.*/uses: grafana\/sigma-rule-deployment\/actions\/integrate@$ACTION_SHA/g" ./.github/workflows/convert-integrate-comment-test.yml

          git add -A
          git commit -m "update main branch to relevant hash" --allow-empty

          git push origin main --force

          gh pr comment "${TEST_PR_URL}" --body "sigma convert all"
