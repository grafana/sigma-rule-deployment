name: "Build Consolidated Image"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: {}

jobs:
  build:
    name: "Build and Push Docker Image"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          persist-credentials: false
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 #v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: "Build and Push (PR)"
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 #v6.15.0
        if: github.event_name == 'pull_request'
        with:
          context: ./actions
          file: actions/Dockerfile
          tags: |
            ghcr.io/grafana/sigma-rule-deployment/sigma-rule-deployer:sha-${{ github.event.pull_request.head.sha }}
          push: true
      - name: "Build and Push (Push)"
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 #v6.15.0
        if: github.event_name == 'push'
        with:
          context: ./actions
          file: actions/Dockerfile
          tags: |
            ghcr.io/grafana/sigma-rule-deployment/sigma-rule-deployer:sha-${{ github.sha }}
          push: true
  test-pr:
    if: github.event_name == 'pull_request'
    name: "Integration Testing"
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Setup Integration Tests
        uses: grafana/shared-workflows/actions/get-vault-secrets@get-vault-secrets/v1.3.0
        with:
          repo_secrets: |
            GITHUB_APP_ID=github-app:app-id
            GITHUB_CLIENT_ID=github-app:client-id
            GITHUB_CLIENT_SECRET=github-app:client-secret
            GITHUB_APP_PRIVATE_KEY=github-app:client-pem
      - name: Generate Token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ env.GITHUB_APP_ID }}
          private-key: ${{ env.GITHUB_APP_PRIVATE_KEY }}
          owner: grafana
          repositories: |
            sigma-rule-deployment
            sigma-rule-deployment-integration-test
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
          persist-credentials: false
          path: ./sigma-rule-deployment
      - name: Checkout Integration Test
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
          persist-credentials: true
          repository: grafana/sigma-rule-deployment-integration-test
          path: ./sigma-rule-deployment-integration-test
      - name: Create new branch
        working-directory: ./sigma-rule-deployment-integration-test
        env:
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          git fetch

          STATUS=0
          git rev-parse --verify integration-test-pr-${GITHUB_PR_NUMBER} 2>/dev/null || STATUS=$?

          if [ $STATUS -eq 0 ]; then
            git checkout integration-test-pr-${GITHUB_PR_NUMBER}
          else
            git checkout -b integration-test-pr-${GITHUB_PR_NUMBER}
          fi

          rm -r ./rules
          rm -r ./pipelines
          rm test.yml
          rm config.yml

          cp -R ../sigma-rule-deployment/integration-test/* ./

          git add -A

          git config user.email "sigma-rule-deployment-app@grafana.com"
          git config user.name "Sigma Rule Deployment App"

          git commit -m "update integration test configuration" --allow-empty

          git push origin integration-test-pr-${GITHUB_PR_NUMBER}

          if [ $STATUS -ne 0 ]; then
            gh pr create --title "Integration Test PR ${GITHUB_PR_NUMBER}" --body "This PR is created by the Sigma Rule Deployment App to test the integration of the Sigma Rule Deployment App with the Sigma Rule Deployment Integration Test App. for grafana/sigma-rule-deployment#${GITHUB_PR_NUMBER}" --head integration-test-pr-${GITHUB_PR_NUMBER} --base main
          fi
